{"ast":null,"code":"export default {\n  data() {\n    return {\n      articles: [{\n        name: \"1\"\n      }, {\n        name: \"2\"\n      }, {\n        name: \"3\"\n      }]\n    };\n  },\n  mounted() {\n    const virtualList = document.getElementById(\"virtual-list\");\n    const listContent = document.getElementById(\"list-content\");\n    const loadMoreButton = document.getElementById(\"load-more\");\n    // 创建 MutationObserver 实例，监视虚拟列表容器的子节点变化\n    const observer = new MutationObserver((mutationsList, observer) => {\n      console.log(0);\n      // 检查是否有新的子节点添加到虚拟列表容器\n      const addedNodes = mutationsList[0].addedNodes;\n      for (const node of addedNodes) {\n        if (node.nodeType === Node.ELEMENT_NODE && node.tagName === \"LI\") {\n          // 有新的列表项添加，继续渲染虚拟列表\n          console.log(\"New item added:\", node);\n        }\n      }\n\n      // 检查加载更多按钮是否可见，如果可见，显示加载更多按钮\n      if (loadMoreButton.style.display !== \"block\") {\n        loadMoreButton.style.display = \"block\";\n        console.log(\"Load more button is visible\");\n      }\n    });\n\n    // 配置 MutationObserver 监听子节点的添加\n    const config = {\n      childList: true\n    };\n\n    // 开始监视虚拟列表容器\n    observer.observe(listContent, config);\n\n    // 模拟加载更多操作\n    function loadMore() {\n      // 模拟异步加载更多数据\n      setTimeout(() => {\n        const newItem = document.createElement(\"li\");\n        newItem.textContent = `Item ${listContent.children.length + 1}`;\n        listContent.appendChild(newItem);\n      }, 1000);\n    }\n\n    // 监听加载更多按钮的点击事件\n    loadMoreButton.addEventListener(\"click\", () => {\n      loadMore();\n      // 隐藏加载更多按钮\n      loadMoreButton.style.display = \"none\";\n    });\n  }\n};","map":{"version":3,"names":["data","articles","name","mounted","virtualList","document","getElementById","listContent","loadMoreButton","observer","MutationObserver","mutationsList","console","log","addedNodes","node","nodeType","Node","ELEMENT_NODE","tagName","style","display","config","childList","observe","loadMore","setTimeout","newItem","createElement","textContent","children","length","appendChild","addEventListener"],"sources":["src/views/oa/inform/main.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    全部文章\r\n    <div id=\"virtual-list\">\r\n      <!-- 虚拟列表的内容 -->\r\n      <ul id=\"list-content\">\r\n        <!-- 列表项 -->\r\n        <li>Item 1</li>\r\n        <li>Item 2</li>\r\n        <!-- 更多列表项 -->\r\n      </ul>\r\n      <!-- 加载更多按钮 -->\r\n      <button id=\"load-more\" style=\"display: none\">加载更多</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      articles: [{ name: \"1\" }, { name: \"2\" }, { name: \"3\" }],\r\n    };\r\n  },\r\n  mounted() {\r\n    const virtualList = document.getElementById(\"virtual-list\");\r\n    const listContent = document.getElementById(\"list-content\");\r\n    const loadMoreButton = document.getElementById(\"load-more\");\r\n    // 创建 MutationObserver 实例，监视虚拟列表容器的子节点变化\r\n    const observer = new MutationObserver((mutationsList, observer) => {\r\n\t\tconsole.log(0)\r\n      // 检查是否有新的子节点添加到虚拟列表容器\r\n      const addedNodes = mutationsList[0].addedNodes;\r\n      for (const node of addedNodes) {\r\n        if (node.nodeType === Node.ELEMENT_NODE && node.tagName === \"LI\") {\r\n          // 有新的列表项添加，继续渲染虚拟列表\r\n          console.log(\"New item added:\", node);\r\n        }\r\n      }\r\n\r\n      // 检查加载更多按钮是否可见，如果可见，显示加载更多按钮\r\n      if (loadMoreButton.style.display !== \"block\") {\r\n        loadMoreButton.style.display = \"block\";\r\n        console.log(\"Load more button is visible\");\r\n      }\r\n    });\r\n\r\n    // 配置 MutationObserver 监听子节点的添加\r\n    const config = { childList: true };\r\n\r\n    // 开始监视虚拟列表容器\r\n    observer.observe(listContent, config);\r\n\r\n    // 模拟加载更多操作\r\n    function loadMore() {\r\n      // 模拟异步加载更多数据\r\n      setTimeout(() => {\r\n        const newItem = document.createElement(\"li\");\r\n        newItem.textContent = `Item ${listContent.children.length + 1}`;\r\n        listContent.appendChild(newItem);\r\n      }, 1000);\r\n    }\r\n\r\n    // 监听加载更多按钮的点击事件\r\n    loadMoreButton.addEventListener(\"click\", () => {\r\n      loadMore();\r\n      // 隐藏加载更多按钮\r\n      loadMoreButton.style.display = \"none\";\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nul li {\r\n  height: 500px;\r\n  background-color: red;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":"AAkBA;EACAA,KAAA;IACA;MACAC,QAAA;QAAAC,IAAA;MAAA;QAAAA,IAAA;MAAA;QAAAA,IAAA;MAAA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,WAAA,GAAAC,QAAA,CAAAC,cAAA;IACA,MAAAC,WAAA,GAAAF,QAAA,CAAAC,cAAA;IACA,MAAAE,cAAA,GAAAH,QAAA,CAAAC,cAAA;IACA;IACA,MAAAG,QAAA,OAAAC,gBAAA,EAAAC,aAAA,EAAAF,QAAA;MACAG,OAAA,CAAAC,GAAA;MACA;MACA,MAAAC,UAAA,GAAAH,aAAA,IAAAG,UAAA;MACA,WAAAC,IAAA,IAAAD,UAAA;QACA,IAAAC,IAAA,CAAAC,QAAA,KAAAC,IAAA,CAAAC,YAAA,IAAAH,IAAA,CAAAI,OAAA;UACA;UACAP,OAAA,CAAAC,GAAA,oBAAAE,IAAA;QACA;MACA;;MAEA;MACA,IAAAP,cAAA,CAAAY,KAAA,CAAAC,OAAA;QACAb,cAAA,CAAAY,KAAA,CAAAC,OAAA;QACAT,OAAA,CAAAC,GAAA;MACA;IACA;;IAEA;IACA,MAAAS,MAAA;MAAAC,SAAA;IAAA;;IAEA;IACAd,QAAA,CAAAe,OAAA,CAAAjB,WAAA,EAAAe,MAAA;;IAEA;IACA,SAAAG,SAAA;MACA;MACAC,UAAA;QACA,MAAAC,OAAA,GAAAtB,QAAA,CAAAuB,aAAA;QACAD,OAAA,CAAAE,WAAA,WAAAtB,WAAA,CAAAuB,QAAA,CAAAC,MAAA;QACAxB,WAAA,CAAAyB,WAAA,CAAAL,OAAA;MACA;IACA;;IAEA;IACAnB,cAAA,CAAAyB,gBAAA;MACAR,QAAA;MACA;MACAjB,cAAA,CAAAY,KAAA,CAAAC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}