{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.unshift.js\";\nimport breadCrumb from \"@/components/breadCrumb.vue\";\nimport { mixins } from \"@/minxin\";\nexport default {\n  components: {\n    breadCrumb\n  },\n  mixins: [mixins],\n  data() {\n    return {\n      meeting_room: [{\n        id: \"48\",\n        local: \"ea sunt magna ut\",\n        name: \"计选再合克达\",\n        have_tv: false,\n        have_board: false,\n        have_projector: false\n      }, {\n        id: \"51\",\n        local: \"et sunt ipsum velit incididunt\",\n        name: \"通志照她今\",\n        have_tv: false,\n        have_board: false,\n        have_projector: false\n      }, {\n        id: \"40\",\n        local: \"Excepteur\",\n        name: \"新书九使\",\n        have_tv: true,\n        have_board: false,\n        have_projector: false\n      }, {\n        id: \"24\",\n        local: \"eiusmod\",\n        name: \"圆明写运须\",\n        have_tv: true,\n        have_board: true,\n        have_projector: false\n      }],\n      usingRoom: [{\n        end_time: \"1680466931\",\n        meeting_room_id: \"40\",\n        start_time: \"1680456931\"\n      }, {\n        end_time: \"1680346931\",\n        meeting_room_id: \"24\",\n        start_time: \"1680336931\"\n      }, {\n        end_time: \"1680334931\",\n        meeting_room_id: \"24\",\n        start_time: \"1680314931\"\n      }],\n      participant: [],\n      filters: [],\n      step: 0,\n      chose: {\n        cur: [],\n        id: \"\",\n        weekday: \"\"\n      },\n      meeting_room_name: \"\",\n      choseweekday: \"\",\n      disableChose: []\n    };\n  },\n  watch: {\n    \"chose.id\": {\n      handler(newValue) {\n        if (newValue != \"\") {\n          //当变化不同的会议室的话，就需要更具filter函数，筛选出会议室名字\n          this.meeting_room_name = this.meeting_room.filter(item => item.id === newValue)[0].name;\n        }\n      }\n    },\n    choseweekday(newValue, oldValue) {\n      this.disableChose = [];\n      this.chose.weekday = newValue;\n      if (newValue != oldValue) {\n        //重新选择一个不同的日子的话，之前选择的时间就重置\n        this.chose = {\n          cur: [],\n          id: \"\",\n          weekday: \"\"\n        };\n        this.chose.weekday = newValue;\n      }\n      //不可选择的项目\n      this.hasUsing.forEach(item => {\n        let obj = {\n          id: \"\",\n          discur: []\n        };\n        if (item.start_time.weekday === newValue) {\n          obj.id = item.room_id;\n          let addstart = Number(item.start_time.startMin) >= 30 ? \"1\" : \"0\";\n          let start = item.start_time.startHour * 2 + Number(addstart);\n          let endadd = item.end_time.endMin >= 30 ? 1 : 0;\n          let end = item.end_time.endHour * 2 + Number(endadd);\n          for (let i = start; i <= end; i++) {\n            obj.discur.push(i);\n          }\n        }\n        this.disableChose.push(obj);\n      });\n    }\n  },\n  computed: {\n    choseTime() {\n      //计算选择的时间\n      if (this.chose.weekday) {\n        if (this.chose.cur.length) {\n          let res1 = (this.chose.cur[0] / 2).toFixed(1).split(\".\");\n          let start_time;\n          if (res1[1] === \"0\") {\n            start_time = res1[0] + \":00\";\n          } else {\n            start_time = res1[0] + \":\" + Number(res1[1]) * 6;\n          }\n          let res2 = ((this.chose.cur[this.chose.cur.length - 1] + 1) / 2).toFixed(1).split(\".\");\n          let end_time;\n          if (res2[1] === \"0\") {\n            end_time = res2[0] + \":00\";\n          } else {\n            end_time = res2[0] + \":\" + Number(res2[1]) * 6;\n          }\n          return this.chose.weekday + \" \" + start_time + \"至\" + end_time;\n        } else {\n          return this.chose.weekday;\n        }\n      } else {\n        return \"\";\n      }\n    },\n    hasUsing() {\n      let res = [];\n      let arr = [\"星期天\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"];\n      this.usingRoom.forEach(item => {\n        let obj = {\n          start_time: \"\",\n          end_time: \"\",\n          room_id: \"\"\n        };\n        let weekday = arr[new Date(item.start_time * 1000).getDay()];\n        let startHour = new Date(item.start_time * 1000).getHours();\n        let startMin;\n        if (new Date(item.start_time * 1000).getMinutes() > 30) {\n          startHour += 1;\n          startMin = \"00\";\n        } else if (new Date(item.start_time * 1000).getMinutes() == 0) {\n          startMin = \"00\";\n        } else {\n          startMin = \"30\";\n        }\n        let endHour = new Date(item.end_time * 1000).getHours();\n        let endMin;\n        if (new Date(item.end_time * 1000).getMinutes() > 30) {\n          endHour += 1;\n          endMin = \"00\";\n        } else if (new Date(item.end_time * 1000).getMinutes() == 0) {\n          endMin = \"00\";\n        } else {\n          endMin = \"30\";\n        }\n        obj.start_time = {\n          weekday,\n          startHour,\n          startMin\n        };\n        obj.end_time = {\n          weekday,\n          endHour,\n          endMin\n        };\n        obj.room_id = item.meeting_room_id;\n        res.push(obj);\n      });\n      return res;\n    }\n  },\n  mounted() {\n    this.getDayInfo();\n    // this.getMeetingRoom();\n    this.getParticipant();\n  },\n  methods: {\n    getMeetingRoom() {\n      this.$request({\n        url: \"/meeting/option\",\n        method: \"post\",\n        data: {\n          community_id: this.community_id\n        }\n      }).then(res => {\n        this.meeting_room = res.data.data.list;\n        this.usingRoom = res.data.data.using;\n      });\n    },\n    getParticipant() {\n      this.$request({\n        url: \"/option/colleague\",\n        method: \"post\",\n        data: {\n          community_id: this.community_id\n        }\n      }).then(res => {\n        this.participant = res.data.data.list;\n      });\n    },\n    canchose(item, index) {\n      this.chose.id = item.id; //确定选中的会议室名称\n      if (this.chose.cur.length === 0) {\n        this.chose.cur.push(index);\n      } else {\n        this.chose.cur.sort((a, b) => a - b);\n        if (!this.chose.cur.includes(index)) {\n          //做的是添加\n          let max = Math.max(...this.chose.cur); //不能把这个放到条件判断里面\n          let min = Math.min(...this.chose.cur);\n          if (index > max) {\n            //尾部添加\n            for (let i = max + 1; i <= index; i++) {\n              this.chose.cur.push(i);\n            }\n          } else {\n            //首部添加\n            for (let i = index; i < min; i++) {\n              this.chose.cur.unshift(i);\n            }\n          }\n        } else {\n          //如果已经有这个格子了还点击，那么就是删除\n          let max = Math.max(...this.chose.cur);\n          for (let i = 0; i <= max - index; i++) {\n            this.chose.cur.pop();\n          }\n        }\n      }\n      this.chose.cur.sort((a, b) => a - b);\n    },\n    clickitem(item, index, isdis) {\n      //isdis是一个布尔值，如果当前时间已经被预定了的话，就给出提示信息，并且不做任何操作\n      if (!isdis) {\n        //对于可选择的项目\n        if (this.chose.weekday === \"\") {\n          this.notifyError(\"请选择日期\");\n        } else {\n          if (this.chose.id === \"\" || this.chose.id === item.id) {\n            this.canchose(item, index);\n          } else {\n            //当重新选择会议室之后\n            this.chose.cur = [];\n            this.chose.cur.push(index);\n            this.chose.id = item.id;\n          }\n        }\n      } else {\n        this.notifyError(\"该时间已经预定了\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["breadCrumb","mixins","components","data","meeting_room","id","local","name","have_tv","have_board","have_projector","usingRoom","end_time","meeting_room_id","start_time","participant","filters","step","chose","cur","weekday","meeting_room_name","choseweekday","disableChose","watch","handler","newValue","filter","item","oldValue","hasUsing","forEach","obj","discur","room_id","addstart","Number","startMin","start","startHour","endadd","endMin","end","endHour","i","push","computed","choseTime","length","res1","toFixed","split","res2","res","arr","Date","getDay","getHours","getMinutes","mounted","getDayInfo","getParticipant","methods","getMeetingRoom","$request","url","method","community_id","then","list","using","canchose","index","sort","a","b","includes","max","Math","min","unshift","pop","clickitem","isdis","notifyError"],"sources":["src/views/oa/meeting/create.vue"],"sourcesContent":["<template>\r\n  <div class=\"create\">\r\n    <bread-crumb></bread-crumb>\r\n    <el-card style=\"margin-top: 10px\">\r\n      <div class=\"check-box\">\r\n        会议室设施：&nbsp;\r\n        <div>\r\n          <el-checkbox-group v-model=\"filters\">\r\n            <el-checkbox label=\"电视\"></el-checkbox>\r\n            <el-checkbox label=\"白板\"></el-checkbox>\r\n            <el-checkbox label=\"投影仪\"></el-checkbox>\r\n          </el-checkbox-group>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"meeting-selector\">\r\n        <div class=\"head\">\r\n          <div class=\"head-aside\">\r\n            <span class=\"time\">时间</span>\r\n            <span class=\"name\">会议室</span>\r\n          </div>\r\n          <div class=\"head-right\">\r\n            <div class=\"header-top\">\r\n              <ul>\r\n                <li\r\n                  v-for=\"item in dateChose\"\r\n                  :key=\"item.week\"\r\n                  @click=\"choseweekday = item.week\"\r\n                  :class=\"{ bgcol: choseweekday === item.week }\"\r\n                >\r\n                  <p>{{ item.week }}</p>\r\n                  <p>{{ item.year }}年{{ item.month }}月{{ item.day }}日</p>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div class=\"header-bot\">\r\n              <el-button size=\"small\" class=\"btn\" @click=\"step = 0\">\r\n                ←\r\n              </el-button>\r\n              <div class=\"time-span\">\r\n                <ul v-if=\"!step\">\r\n                  <li v-for=\"(_, index) of Array(13)\" :key=\"index\">\r\n                    <p>{{ index }}:00</p>\r\n                  </li>\r\n                </ul>\r\n                <ul v-else>\r\n                  <li v-for=\"(_, index) of Array(13)\" :key=\"index\">\r\n                    <p>{{ index + step * 12 }}:00</p>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <el-button size=\"small\" class=\"btn\" @click=\"step = 1\">\r\n                →\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"body\">\r\n          <div v-for=\"item in meeting_room\" :key=\"item.name\" class=\"body-item\">\r\n            <div class=\"box-content\">\r\n              <span class=\"meeting-name\">{{ item.name }}</span>\r\n              <div class=\"item\" v-if=\"!step\">\r\n                <span\r\n                  class=\"meeting-item-box\"\r\n                  v-for=\"(_, index) in Array(24)\"\r\n                  :key=\"index\"\r\n                  @click=\"\r\n                    clickitem(\r\n                      item,\r\n                      index,\r\n                      disableChose.some((v) => v.id === item.id) &&\r\n                        disableChose.some((v) => v.discur.includes(index))\r\n                    )\r\n                  \"\r\n                  :class=\"{\r\n                    bgcol: chose.cur.includes(index) && chose.id === item.id,\r\n                    nobgc:\r\n                      disableChose.some((v) => v.id === item.id) &&\r\n                      disableChose.some((v) => v.discur.includes(index)),\r\n                  }\"\r\n                ></span>\r\n              </div>\r\n              <div class=\"item\" v-if=\"step\">\r\n                <span\r\n                  class=\"meeting-item-box\"\r\n                  v-for=\"(_, index) in Array(24)\"\r\n                  :key=\"index\"\r\n                  @click=\"\r\n                    clickitem(\r\n                      item,\r\n                      index + 24,\r\n                      disableChose.some((v) => v.id === item.id) &&\r\n                        disableChose.some((v) => v.discur.includes(index + 24))\r\n                    )\r\n                  \"\r\n                  :class=\"{\r\n                    bgcol:\r\n                      chose.cur.includes(index + 24) && chose.id === item.id,\r\n                    nobgc:\r\n                      disableChose.some((v) => v.id === item.id) &&\r\n                      disableChose.some((v) => v.discur.includes(index + 24)),\r\n                  }\"\r\n                ></span>\r\n              </div>\r\n            </div>\r\n            <div class=\"blck\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <el-form>\r\n        <el-form-item :label=\"'会议名称：' + meeting_room_name\"> </el-form-item>\r\n        <el-form-item :label=\"'预定时间：' + choseTime\"> </el-form-item>\r\n        <el-form-item label=\"预定人：\"> </el-form-item>\r\n        <el-form-item label=\"会议主题：\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            :rows=\"2\"\r\n            placeholder=\"请输入内容\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"参会人员：\"></el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport breadCrumb from \"@/components/breadCrumb.vue\";\r\nimport { mixins } from \"@/minxin\";\r\nexport default {\r\n  components: { breadCrumb },\r\n  mixins: [mixins],\r\n  data() {\r\n    return {\r\n      meeting_room: [\r\n        {\r\n          id: \"48\",\r\n          local: \"ea sunt magna ut\",\r\n          name: \"计选再合克达\",\r\n          have_tv: false,\r\n          have_board: false,\r\n          have_projector: false,\r\n        },\r\n        {\r\n          id: \"51\",\r\n          local: \"et sunt ipsum velit incididunt\",\r\n          name: \"通志照她今\",\r\n          have_tv: false,\r\n          have_board: false,\r\n          have_projector: false,\r\n        },\r\n        {\r\n          id: \"40\",\r\n          local: \"Excepteur\",\r\n          name: \"新书九使\",\r\n          have_tv: true,\r\n          have_board: false,\r\n          have_projector: false,\r\n        },\r\n        {\r\n          id: \"24\",\r\n          local: \"eiusmod\",\r\n          name: \"圆明写运须\",\r\n          have_tv: true,\r\n          have_board: true,\r\n          have_projector: false,\r\n        },\r\n      ],\r\n      usingRoom: [\r\n        {\r\n          end_time: \"1680466931\",\r\n          meeting_room_id: \"40\",\r\n          start_time: \"1680456931\",\r\n        },\r\n        {\r\n          end_time: \"1680346931\",\r\n          meeting_room_id: \"24\",\r\n          start_time: \"1680336931\",\r\n        },\r\n        {\r\n          end_time: \"1680334931\",\r\n          meeting_room_id: \"24\",\r\n          start_time: \"1680314931\",\r\n        },\r\n      ],\r\n      participant: [],\r\n      filters: [],\r\n      step: 0,\r\n      chose: { cur: [], id: \"\", weekday: \"\" },\r\n      meeting_room_name: \"\",\r\n      choseweekday: \"\",\r\n      disableChose: [],\r\n    };\r\n  },\r\n  watch: {\r\n    \"chose.id\": {\r\n      handler(newValue) {\r\n        if (newValue != \"\") {\r\n          //当变化不同的会议室的话，就需要更具filter函数，筛选出会议室名字\r\n          this.meeting_room_name = this.meeting_room.filter(\r\n            (item) => item.id === newValue\r\n          )[0].name;\r\n        }\r\n      },\r\n    },\r\n    choseweekday(newValue, oldValue) {\r\n      this.disableChose = [];\r\n      this.chose.weekday = newValue;\r\n      if (newValue != oldValue) {\r\n        //重新选择一个不同的日子的话，之前选择的时间就重置\r\n        this.chose = { cur: [], id: \"\", weekday: \"\" };\r\n        this.chose.weekday = newValue;\r\n      }\r\n      //不可选择的项目\r\n      this.hasUsing.forEach((item) => {\r\n        let obj = { id: \"\", discur: [] };\r\n        if (item.start_time.weekday === newValue) {\r\n          obj.id = item.room_id;\r\n          let addstart = Number(item.start_time.startMin) >= 30 ? \"1\" : \"0\";\r\n          let start = item.start_time.startHour * 2 + Number(addstart);\r\n          let endadd = item.end_time.endMin >= 30 ? 1 : 0;\r\n          let end = item.end_time.endHour * 2 + Number(endadd);\r\n          for (let i = start; i <= end; i++) {\r\n            obj.discur.push(i);\r\n          }\r\n        }\r\n        this.disableChose.push(obj);\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    choseTime() {\r\n      //计算选择的时间\r\n      if (this.chose.weekday) {\r\n        if (this.chose.cur.length) {\r\n          let res1 = (this.chose.cur[0] / 2).toFixed(1).split(\".\");\r\n          let start_time;\r\n          if (res1[1] === \"0\") {\r\n            start_time = res1[0] + \":00\";\r\n          } else {\r\n            start_time = res1[0] + \":\" + Number(res1[1]) * 6;\r\n          }\r\n          let res2 = ((this.chose.cur[this.chose.cur.length - 1] + 1) / 2)\r\n            .toFixed(1)\r\n            .split(\".\");\r\n          let end_time;\r\n          if (res2[1] === \"0\") {\r\n            end_time = res2[0] + \":00\";\r\n          } else {\r\n            end_time = res2[0] + \":\" + Number(res2[1]) * 6;\r\n          }\r\n          return this.chose.weekday + \" \" + start_time + \"至\" + end_time;\r\n        } else {\r\n          return this.chose.weekday;\r\n        }\r\n      } else {\r\n        return \"\";\r\n      }\r\n    },\r\n    hasUsing() {\r\n      let res = [];\r\n      let arr = [\r\n        \"星期天\",\r\n        \"星期一\",\r\n        \"星期二\",\r\n        \"星期三\",\r\n        \"星期四\",\r\n        \"星期五\",\r\n        \"星期六\",\r\n      ];\r\n      this.usingRoom.forEach((item) => {\r\n        let obj = { start_time: \"\", end_time: \"\", room_id: \"\" };\r\n        let weekday = arr[new Date(item.start_time * 1000).getDay()];\r\n        let startHour = new Date(item.start_time * 1000).getHours();\r\n        let startMin;\r\n        if (new Date(item.start_time * 1000).getMinutes() > 30) {\r\n          startHour += 1;\r\n          startMin = \"00\";\r\n        } else if (new Date(item.start_time * 1000).getMinutes() == 0) {\r\n          startMin = \"00\";\r\n        } else {\r\n          startMin = \"30\";\r\n        }\r\n\r\n        let endHour = new Date(item.end_time * 1000).getHours();\r\n        let endMin;\r\n        if (new Date(item.end_time * 1000).getMinutes() > 30) {\r\n          endHour += 1;\r\n          endMin = \"00\";\r\n        } else if (new Date(item.end_time * 1000).getMinutes() == 0) {\r\n          endMin = \"00\";\r\n        } else {\r\n          endMin = \"30\";\r\n        }\r\n\r\n\r\n        obj.start_time = { weekday, startHour, startMin };\r\n        obj.end_time = { weekday, endHour, endMin };\r\n        obj.room_id = item.meeting_room_id;\r\n        res.push(obj);\r\n      });\r\n      return res;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getDayInfo();\r\n    // this.getMeetingRoom();\r\n    this.getParticipant();\r\n  },\r\n  methods: {\r\n    getMeetingRoom() {\r\n      this.$request({\r\n        url: \"/meeting/option\",\r\n        method: \"post\",\r\n        data: {\r\n          community_id: this.community_id,\r\n        },\r\n      }).then((res) => {\r\n        this.meeting_room = res.data.data.list;\r\n        this.usingRoom = res.data.data.using;\r\n      });\r\n    },\r\n    getParticipant() {\r\n      this.$request({\r\n        url: \"/option/colleague\",\r\n        method: \"post\",\r\n        data: {\r\n          community_id: this.community_id,\r\n        },\r\n      }).then((res) => {\r\n        this.participant = res.data.data.list;\r\n      });\r\n    },\r\n\tcanchose(item,index){\r\n\t\tthis.chose.id = item.id;//确定选中的会议室名称\r\n            if (this.chose.cur.length === 0) {\r\n              this.chose.cur.push(index);\r\n            } else {\r\n              this.chose.cur.sort((a, b) => a - b);\r\n              if (!this.chose.cur.includes(index)) {\r\n                //做的是添加\r\n                let max = Math.max(...this.chose.cur);//不能把这个放到条件判断里面\r\n                let min = Math.min(...this.chose.cur);\r\n                if (index > max) {//尾部添加\r\n                  for (let i = max + 1; i <= index; i++) {\r\n                    this.chose.cur.push(i);\r\n                  }\r\n                } else {//首部添加\r\n                  for (let i = index; i < min; i++) {\r\n                    this.chose.cur.unshift(i);\r\n                  }\r\n                }\r\n              } else {//如果已经有这个格子了还点击，那么就是删除\r\n                let max = Math.max(...this.chose.cur);\r\n                for (let i = 0; i <= max - index; i++) {\r\n                  this.chose.cur.pop();\r\n                }\r\n              }\r\n            }\r\n            this.chose.cur.sort((a, b) => a - b);\r\n\t},\r\n    clickitem(item, index, isdis) {\r\n      //isdis是一个布尔值，如果当前时间已经被预定了的话，就给出提示信息，并且不做任何操作\r\n      if (!isdis) {//对于可选择的项目\r\n        if (this.chose.weekday === \"\") {\r\n          this.notifyError(\"请选择日期\");\r\n        } else {\r\n          if (this.chose.id === \"\" || this.chose.id === item.id) {\r\n            this.canchose(item,index)\r\n          } else {\r\n            //当重新选择会议室之后\r\n            this.chose.cur = [];\r\n            this.chose.cur.push(index);\r\n            this.chose.id = item.id;\r\n          }\r\n        }\r\n      } else {\r\n        this.notifyError(\"该时间已经预定了\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n.create {\r\n  .check-box {\r\n    display: flex;\r\n    align-content: flex-start;\r\n  }\r\n  .meeting-selector {\r\n    margin-top: 20px;\r\n    overflow: hidden;\r\n    margin-bottom: 20px;\r\n    .head {\r\n      height: 80px;\r\n      border: 1px solid #0000ff;\r\n      display: flex;\r\n      overflow: hidden;\r\n      .head-aside {\r\n        width: 80px;\r\n        height: 80px;\r\n        background-color: #fff;\r\n        position: relative;\r\n        .time {\r\n          right: 5px;\r\n          position: absolute;\r\n          top: 5px;\r\n        }\r\n        .name {\r\n          left: 5px;\r\n          position: absolute;\r\n          bottom: 5px;\r\n        }\r\n        &::after {\r\n          content: \"\";\r\n          position: absolute;\r\n          left: -108px;\r\n          top: 2px;\r\n          width: 221px;\r\n          background-color: blue;\r\n          height: 1px;\r\n          transform: rotate(47deg);\r\n        }\r\n      }\r\n      .head-right {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        .header-top {\r\n          border-bottom: 1px solid #0000ff;\r\n          ul {\r\n            padding: 0px;\r\n            margin: 0px;\r\n            display: flex;\r\n            width: 100%;\r\n            justify-content: space-between;\r\n            background-color: #fff;\r\n          }\r\n          ul li {\r\n            margin: 0px;\r\n            padding: 0px;\r\n            list-style: none;\r\n            float: left;\r\n            height: 100%;\r\n            text-align: center;\r\n            width: 100%;\r\n            border-left: 1px solid blue;\r\n            p {\r\n              margin: 0px;\r\n            }\r\n          }\r\n        }\r\n        .header-bot {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          width: 100%;\r\n          height: 100%;\r\n          .btn {\r\n            border-left: 1px solid blue;\r\n            width: 43px;\r\n            height: 40px;\r\n          }\r\n          .time-span {\r\n            width: 100%;\r\n            height: 40px;\r\n            overflow: hidden;\r\n            ul {\r\n              width: auto;\r\n              height: 40px;\r\n              margin: 0px;\r\n              padding: 0px;\r\n\t\t\t  background-color: skyblue;\r\n            }\r\n            ul li {\r\n              list-style: none;\r\n              float: left;\r\n              width: 85.51px;\r\n              height: 40px;\r\n              background-color: skyblue;\r\n              border-left: 1px solid blue;\r\n              display: flex;\r\n              flex-direction: column;\r\n              justify-content: center;\r\n              align-content: center;\r\n              p {\r\n                margin: 0px;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .body {\r\n      .body-item {\r\n        height: 40px;\r\n        display: flex;\r\n        border-bottom: 1px solid blue;\r\n        .box-content {\r\n          width: calc(100% - 45px);\r\n          height: 100%;\r\n          border-left: 1px solid blue;\r\n          .meeting-name {\r\n            float: left;\r\n            height: 100%;\r\n            text-align: center;\r\n            line-height: 40px;\r\n            width: 118px;\r\n            border-right: 1px solid blue;\r\n          }\r\n          .item {\r\n            display: flex;\r\n            height: 100%;\r\n            justify-content: space-between;\r\n            border-bottom: 1px solid blue;\r\n\r\n            .meeting-item-box {\r\n              flex: 1;\r\n              border-right: 1px solid blue;\r\n            }\r\n          }\r\n        }\r\n        .blck {\r\n          width: 43px;\r\n          height: 100%;\r\n          border-right: 1px solid blue;\r\n          border-bottom: 1px solid #fff;\r\n        }\r\n       \r\n      }\r\n    }\r\n\t.body-item:last-of-type {\r\n\t\t\t.blck{\r\n\t\t\t\tborder-bottom: 1px solid blue;\r\n\t\t\t}\r\n        }\r\n  }\r\n  .bgcol {\r\n    background-color: papayawhip;\r\n  }\r\n  .nobgc {\r\n    background-color: grey;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}