{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport breadCrumb from \"components/breadCrumb\";\nimport tableCommon from \"components/tableComon\";\nimport filterChose from \"@/components/filterChose.vue\";\nimport { mixins } from \"@/minxin\";\nexport default {\n  components: {\n    breadCrumb,\n    tableCommon,\n    filterChose\n  },\n  mixins: [mixins],\n  name: \"petListVue\",\n  data() {\n    return {\n      filterData: [{\n        title: \"雌雄：\",\n        type: \"radio\",\n        value: \"sex\",\n        filters: {\n          sex: undefined\n        },\n        radiod: [{\n          label: undefined,\n          title: \"全部\"\n        }, {\n          label: 1,\n          title: \"雄\"\n        }, {\n          label: 0,\n          title: \"雌\"\n        }]\n      }, {\n        title: \"登记：\",\n        type: \"radio\",\n        value: \"license\",\n        filters: {\n          license: undefined\n        },\n        radiod: [{\n          label: undefined,\n          title: \"全部\"\n        }, {\n          label: true,\n          title: \"已登记\"\n        }, {\n          label: false,\n          title: \"未登记\"\n        }]\n      }, {\n        title: \"注销：\",\n        type: \"radio\",\n        value: \"remove\",\n        filters: {\n          remove: undefined\n        },\n        radiod: [{\n          label: undefined,\n          title: \"全部\"\n        }, {\n          label: 1,\n          title: \"是\"\n        }, {\n          label: 0,\n          title: \"否\"\n        }]\n      }, {\n        title: \"品种：\",\n        type: \"input\",\n        value: \"bread\",\n        filters: {\n          bread: undefined\n        },\n        placeholder: \"请输入品种搜索\"\n      }, {\n        title: \"毛色：\",\n        type: \"input\",\n        value: \"coat_color\",\n        filters: {\n          coat_color: undefined\n        },\n        placeholder: \"请输入毛色搜索\"\n      }],\n      filters: {\n        sex: undefined,\n        license: undefined,\n        remove: undefined,\n        bread: undefined,\n        coat_color: undefined\n      },\n      tableData: [],\n      tableHeader: [{\n        prop: \"id\",\n        label: \"编号\",\n        width: \"150\"\n      }, {\n        prop: \"name\",\n        label: \"宠物名\",\n        width: \"100 \"\n      }, {\n        prop: \"pet_type\",\n        label: \"宠物类型\",\n        width: \"80\",\n        render(h, {\n          row\n        }) {\n          function typeChose(val) {\n            var type = \"\";\n            switch (val) {\n              case 1:\n                type = \"狗\";\n                break;\n              case 2:\n                type = \"猪\";\n                break;\n              case 3:\n                type = \"锚\";\n                break;\n              case 4:\n                type = \"老鼠\";\n                break;\n            }\n            return type;\n          }\n          return h(\"span\", typeChose(row.pet_type));\n        }\n      }, {\n        prop: \"sex\",\n        label: \"雌雄\",\n        width: 40,\n        render(h, {\n          row\n        }) {\n          return h(\"span\", row.sex === 1 ? \"雄\" : \"雌\");\n        }\n      }, {\n        prop: \"breed\",\n        label: \"品种\",\n        width: 80\n      }, {\n        prop: \"coat_color\",\n        label: \"毛色\",\n        width: 60\n      }, {\n        prop: \"pet_license\",\n        label: \"宠物登记\",\n        width: 100,\n        render(h, {\n          row\n        }) {\n          return h(\"el-tag\", {\n            attrs: {\n              type: row.pet_license ? \"primary\" : \"success\"\n            }\n          }, row.pet_license ? \"已登记\" : \"未登记\");\n        }\n      }, {\n        prop: \"remove\",\n        label: \"是否注销\",\n        width: 100,\n        render(h, {\n          row\n        }) {\n          return h(\"el-tag\", {\n            attrs: {\n              type: row.remove ? \"primary\" : \"success\"\n            }\n          }, row.remove ? \"是\" : \"否\");\n        }\n      }, {\n        prop: \"created_at\",\n        label: \"登记时间\",\n        width: 180,\n        render(h, {\n          row\n        }) {\n          return h(\"span\", this.standDate2(row.created_at));\n        }\n      }, {\n        prop: \"action\",\n        label: \"操作\",\n        render(h, {\n          row\n        }) {\n          //this指向的是当前table的父节点\n          let _this = this;\n          return h(\"span\", {\n            class: {\n              doaction: true\n            },\n            style: {\n              color: \"skyblue\"\n            },\n            on: {\n              click() {\n                //\tconsole.log(_this.$parent);\n                //_this.togoDetail(row.id)\n                _this.$parent.togoDetail(row.id);\n              }\n            }\n          }, \"查看\");\n        }\n      }],\n      pagenum: 1,\n      //第几页\n      pagesize: 10 //这一页有多少条数据这个数据并不会改变表格里面的渲染数据的条数，在表格中他是根据tableData来显示的，tableData有几条数据就显示几条。pagesize作为每页显示的数目，pagenum作为当前页，在向后端请求数据的时候，会发送过去，后端将会根据这两个参数返回相对应的table数据，然后前端拿到这个table数据之后，根据这个数据进行渲染\n    };\n  },\n\n  methods: {\n    //去往详情页\n    togoDetail(val) {\n      this.$router.push({\n        name: \"detailpet\",\n        query: {\n          id: val\n        }\n      });\n    },\n    //当页面数据条数或者当前页改变的时候也要向后端发送请求\n    handleSizeChange(val) {\n      this.pagesize = val;\n      this.getPetData();\n    },\n    handlechangenum(val) {\n      this.pagenum = val;\n      this.getPetData();\n    },\n    //获取数据\n    getPetData() {\n      this.$request({\n        url: \"/pet/list\",\n        method: \"post\",\n        data: {\n          page_num: this.pagenum,\n          page_size: this.pagesize,\n          community_id: this.community_id,\n          ...this.filters\n        }\n      }).then(res => {\n        this.tableData = res.data.data.list.map(item => {\n          item.created_at = item.created_at * 1000;\n          return item;\n        });\n      });\n    }\n  },\n  mounted() {\n    this.getPetData();\n  },\n  watch: {\n    watchFilters: {\n      handler(newValue, oldValue) {\n        this.getPetData(); //当数据发生变化的时候，向后端重新发送请求\n      },\n\n      deep: true\n    }\n  },\n  computed: {\n    community_id() {\n      if (this.$store.getters.getPostInfo.community_list != undefined) {\n        return this.$store.getters.getPostInfo.community_list[0].community_id;\n      } else {\n        return \"1\";\n      }\n    },\n    watchFilters() {\n      let obj = {};\n      this.filterData.forEach(item => {\n        obj = Object.assign(obj, ...item.filters);\n      });\n      console.log(obj);\n      return JSON.parse(JSON.stringify(this.filters));\n    }\n  }\n};","map":{"version":3,"names":["breadCrumb","tableCommon","filterChose","mixins","components","name","data","filterData","title","type","value","filters","sex","undefined","radiod","label","license","remove","bread","placeholder","coat_color","tableData","tableHeader","prop","width","render","h","row","typeChose","val","pet_type","attrs","pet_license","standDate2","created_at","_this","class","doaction","style","color","on","click","$parent","togoDetail","id","pagenum","pagesize","methods","$router","push","query","handleSizeChange","getPetData","handlechangenum","$request","url","method","page_num","page_size","community_id","then","res","list","map","item","mounted","watch","watchFilters","handler","newValue","oldValue","deep","computed","$store","getters","getPostInfo","community_list","obj","forEach","Object","assign","console","log","JSON","parse","stringify"],"sources":["src/views/basic/pet/list.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <bread-crumb></bread-crumb>\r\n    <!--筛选列表 -->\r\n    <el-card style=\"margin-top: 20px\">\r\n      <filter-chose :filterData.sync=\"filterData\"></filter-chose>\r\n    </el-card>\r\n    <!-- 表格 -->\r\n\r\n    <el-card style=\"margin-top: 20px; padding: 0px\">\r\n      <table-common :data=\"tableData\" :columns=\"tableHeader\"></table-common>\r\n\r\n      <!-- 分页器 -->\r\n      <div class=\"pignation\">\r\n        <el-pagination\r\n          :page-sizes=\"[100, 200, 230, 400]\"\r\n          :page-size=\"pagesize\"\r\n          :total=\"tableData.length\"\r\n          :current-page=\"pagenum\"\r\n          @size-change=\"handleSizeChange\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          @current-change=\"handlechangenum\"\r\n        ></el-pagination>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport breadCrumb from \"components/breadCrumb\";\r\nimport tableCommon from \"components/tableComon\";\r\nimport filterChose from \"@/components/filterChose.vue\";\r\nimport { mixins } from \"@/minxin\";\r\nexport default {\r\n  components: { breadCrumb, tableCommon, filterChose },\r\n  mixins: [mixins],\r\n  name: \"petListVue\",\r\n  data() {\r\n    return {\r\n      filterData: [\r\n        {\r\n          title: \"雌雄：\",\r\n          type: \"radio\",\r\n          value: \"sex\",\r\n          filters: { sex: undefined },\r\n          radiod: [\r\n            { label: undefined, title: \"全部\" },\r\n            { label: 1, title: \"雄\" },\r\n            { label: 0, title: \"雌\" },\r\n          ],\r\n        },\r\n        {\r\n          title: \"登记：\",\r\n          type: \"radio\",\r\n          value: \"license\",\r\n          filters: { license: undefined },\r\n          radiod: [\r\n            { label: undefined, title: \"全部\" },\r\n            { label: true, title: \"已登记\" },\r\n            { label: false, title: \"未登记\" },\r\n          ],\r\n        },\r\n        {\r\n          title: \"注销：\",\r\n          type: \"radio\",\r\n          value: \"remove\",\r\n          filters: { remove: undefined },\r\n          radiod: [\r\n            { label: undefined, title: \"全部\" },\r\n            { label: 1, title: \"是\" },\r\n            { label: 0, title: \"否\" },\r\n          ],\r\n        },\r\n        {\r\n          title: \"品种：\",\r\n          type: \"input\",\r\n          value: \"bread\",\r\n          filters: { bread: undefined },\r\n          placeholder: \"请输入品种搜索\",\r\n        },\r\n        {\r\n          title: \"毛色：\",\r\n          type: \"input\",\r\n          value: \"coat_color\",\r\n          filters: { coat_color: undefined },\r\n          placeholder: \"请输入毛色搜索\",\r\n        },\r\n      ],\r\n      filters: {\r\n        sex: undefined,\r\n        license: undefined,\r\n        remove: undefined,\r\n        bread: undefined,\r\n        coat_color: undefined,\r\n      },\r\n      tableData: [],\r\n      tableHeader: [\r\n        { prop: \"id\", label: \"编号\", width: \"150\" },\r\n        { prop: \"name\", label: \"宠物名\", width: \"100 \" },\r\n        {\r\n          prop: \"pet_type\",\r\n          label: \"宠物类型\",\r\n          width: \"80\",\r\n          render(h, { row }) {\r\n            function typeChose(val) {\r\n              var type = \"\";\r\n              switch (val) {\r\n                case 1:\r\n                  type = \"狗\";\r\n                  break;\r\n                case 2:\r\n                  type = \"猪\";\r\n                  break;\r\n                case 3:\r\n                  type = \"锚\";\r\n                  break;\r\n                case 4:\r\n                  type = \"老鼠\";\r\n                  break;\r\n              }\r\n              return type;\r\n            }\r\n\r\n            return h(\"span\", typeChose(row.pet_type));\r\n          },\r\n        },\r\n        {\r\n          prop: \"sex\",\r\n          label: \"雌雄\",\r\n          width: 40,\r\n          render(h, { row }) {\r\n            return h(\"span\", row.sex === 1 ? \"雄\" : \"雌\");\r\n          },\r\n        },\r\n        { prop: \"breed\", label: \"品种\", width: 80 },\r\n        { prop: \"coat_color\", label: \"毛色\", width: 60 },\r\n        {\r\n          prop: \"pet_license\",\r\n          label: \"宠物登记\",\r\n          width: 100,\r\n          render(h, { row }) {\r\n            return h(\r\n              \"el-tag\",\r\n              { attrs: { type: row.pet_license ? \"primary\" : \"success\" } },\r\n              row.pet_license ? \"已登记\" : \"未登记\"\r\n            );\r\n          },\r\n        },\r\n        {\r\n          prop: \"remove\",\r\n          label: \"是否注销\",\r\n          width: 100,\r\n          render(h, { row }) {\r\n            return h(\r\n              \"el-tag\",\r\n              { attrs: { type: row.remove ? \"primary\" : \"success\" } },\r\n              row.remove ? \"是\" : \"否\"\r\n            );\r\n          },\r\n        },\r\n        {\r\n          prop: \"created_at\",\r\n          label: \"登记时间\",\r\n          width: 180,\r\n          render(h, { row }) {\r\n            return h(\"span\", this.standDate2(row.created_at));\r\n          },\r\n        },\r\n        {\r\n          prop: \"action\",\r\n          label: \"操作\",\r\n          render(h, { row }) {\r\n            //this指向的是当前table的父节点\r\n            let _this = this;\r\n            return h(\r\n              \"span\",\r\n              {\r\n                class: { doaction: true },\r\n                style: {\r\n                  color: \"skyblue\",\r\n                },\r\n                on: {\r\n                  click() {\r\n                    //\tconsole.log(_this.$parent);\r\n                    //_this.togoDetail(row.id)\r\n                    _this.$parent.togoDetail(row.id);\r\n                  },\r\n                },\r\n              },\r\n              \"查看\"\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      pagenum: 1, //第几页\r\n      pagesize: 10, //这一页有多少条数据这个数据并不会改变表格里面的渲染数据的条数，在表格中他是根据tableData来显示的，tableData有几条数据就显示几条。pagesize作为每页显示的数目，pagenum作为当前页，在向后端请求数据的时候，会发送过去，后端将会根据这两个参数返回相对应的table数据，然后前端拿到这个table数据之后，根据这个数据进行渲染\r\n    };\r\n  },\r\n  methods: {\r\n    //去往详情页\r\n    togoDetail(val) {\r\n      this.$router.push({ name: \"detailpet\", query: { id: val } });\r\n    },\r\n    //当页面数据条数或者当前页改变的时候也要向后端发送请求\r\n    handleSizeChange(val) {\r\n      this.pagesize = val;\r\n      this.getPetData();\r\n    },\r\n    handlechangenum(val) {\r\n      this.pagenum = val;\r\n      this.getPetData();\r\n    },\r\n    //获取数据\r\n    getPetData() {\r\n      this.$request({\r\n        url: \"/pet/list\",\r\n        method: \"post\",\r\n        data: {\r\n          page_num: this.pagenum,\r\n          page_size: this.pagesize,\r\n          community_id: this.community_id,\r\n          ...this.filters,\r\n        },\r\n      }).then((res) => {\r\n        this.tableData = res.data.data.list.map((item) => {\r\n          item.created_at = item.created_at * 1000;\r\n          return item;\r\n        });\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getPetData();\r\n  },\r\n  watch: {\r\n    watchFilters: {\r\n      handler(newValue, oldValue) {\r\n        this.getPetData(); //当数据发生变化的时候，向后端重新发送请求\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  computed: {\r\n    community_id() {\r\n      if (this.$store.getters.getPostInfo.community_list != undefined) {\r\n        return this.$store.getters.getPostInfo.community_list[0].community_id;\r\n      } else {\r\n        return \"1\";\r\n      }\r\n    },\r\n    watchFilters() {\r\n      let obj = {};\r\n      this.filterData.forEach((item) => {\r\n        obj = Object.assign(obj, ...item.filters);\r\n      });\r\n      console.log(obj);\r\n      return JSON.parse(JSON.stringify(this.filters));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.item {\r\n  height: 50px;\r\n  padding: 0px;\r\n  line-height: 40px;\r\n  height: 40px;\r\n  padding-left: 20px;\r\n  margin-bottom: 20px;\r\n  text-align: left;\r\n}\r\n.item span {\r\n  margin-right: 20px;\r\n}\r\n.pignation {\r\n  height: 30px;\r\n  margin-top: 30px;\r\n  text-align: right;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}