{"ast":null,"code":"import { basicRouter } from \"@/views/basic/basicRouter\";\nimport { iotRouter } from \"@/views/iot/iotRouter\";\nimport { userCenterRouter } from \"@/views/center/centerCenterRouter\";\nimport { oaRouter } from \"@/views/oa/oaRouter\";\nexport default {\n  name: \"navAside\",\n  mounted() {},\n  data() {\n    return {\n      total: [basicRouter, iotRouter, userCenterRouter, oaRouter]\n    };\n  },\n  computed: {\n    routes() {\n      let res1 = \"/\" + this.$route.path.split(\"/\")[1]; //根据当前路由是/iot还是/basic来筛选导航栏中的选项应该是哪一个\n      let res2 = this.total.filter(item => {\n        return item.path == res1;\n      });\n      //不能直接return res2[0].children 一开始刷新页面的时候是res2还是空的\n      return res2.length ? res2[0].children : [];\n    }\n  },\n  methods: {\n    hasChildrenRoute() {\n      //有子路由\n      return this.routes.filter(item => {\n        return item.children;\n      });\n    },\n    noChidrenRoute() {\n      //没有子路由\n      return this.routes.filter(item => {\n        return !item.children;\n      });\n    }\n  }\n};","map":{"version":3,"names":["basicRouter","iotRouter","userCenterRouter","oaRouter","name","mounted","data","total","computed","routes","res1","$route","path","split","res2","filter","item","length","children","methods","hasChildrenRoute","noChidrenRoute"],"sources":["src/views/app/components/nav.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-menu\r\n      :router=\"true\"\r\n      :default-active=\"$route.path\"\r\n      style=\"height: 100vh\"\r\n      :class=\"{'sidebgc1':$store.state.sliderbgc===1,'sidebgc2':$store.state.sliderbgc===2}\"\r\n    >\r\n      <h5>物业管理</h5>\r\n      <!-- 导航栏区域 -->\r\n      <!-- 没有子路由 -->\r\n      <div v-for=\"item of noChidrenRoute()\" :key=\"item.meta.title\">\r\n        <el-menu-item\r\n          :index=\"item.path\"\r\n          v-if=\"item.meta.nav\"\r\n          :class=\"[item.path == $route.path ? 'bgclolr' : '']\"\r\n          style=\"text-align: left\"\r\n        >\r\n          <i :class=\"item.meta.icon\"></i>\r\n          {{ item.meta.title }}\r\n        </el-menu-item>\r\n      </div>\r\n\r\n      <!-- 有子路由 -->\r\n      <el-submenu\r\n        v-for=\"item of hasChildrenRoute()\"\r\n        :key=\"item.meta.title\"\r\n        :index=\"item.path\"\r\n      >\r\n        <template slot=\"title\">\r\n          <span><i :class=\"item.meta.icon\"></i>{{ item.meta.title }}</span>\r\n        </template>\r\n        <template v-for=\"chilItem of item.children\">\r\n          <el-menu-item\r\n            v-bind:key=\"chilItem.meta.title\"\r\n            :index=\"chilItem.path\"\r\n            v-if=\"chilItem.meta.nav\"\r\n            :class=\"[chilItem.path == $route.path ? 'bgclolr' : '']\"\r\n            ><i :class=\"chilItem.meta.icon\"></i\r\n            >{{ chilItem.meta.title }}</el-menu-item\r\n          >\r\n        </template>\r\n      </el-submenu>\r\n    </el-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { basicRouter } from \"@/views/basic/basicRouter\";\r\nimport { iotRouter } from \"@/views/iot/iotRouter\";\r\nimport { userCenterRouter } from \"@/views/center/centerCenterRouter\";\r\nimport { oaRouter } from \"@/views/oa/oaRouter\";\r\nexport default {\r\n  name: \"navAside\",\r\n  mounted() {},\r\n  data() {\r\n    return {\r\n      total: [basicRouter, iotRouter, userCenterRouter, oaRouter],\r\n    };\r\n  },\r\n  computed: {\r\n    routes() {\r\n      let res1 = \"/\" + this.$route.path.split(\"/\")[1]; //根据当前路由是/iot还是/basic来筛选导航栏中的选项应该是哪一个\r\n      let res2 = this.total.filter((item) => {\r\n        return item.path == res1;\r\n      });\r\n      //不能直接return res2[0].children 一开始刷新页面的时候是res2还是空的\r\n      return res2.length ? res2[0].children : [];\r\n    },\r\n  },\r\n  methods: {\r\n    hasChildrenRoute() {\r\n      //有子路由\r\n      return this.routes.filter((item) => {\r\n        return item.children;\r\n      });\r\n    },\r\n    noChidrenRoute() {\r\n      //没有子路由\r\n      return this.routes.filter((item) => {\r\n        return !item.children;\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scope>\r\n.bgclolr {\r\n  background-color: skyblue !important;\r\n}\r\n.el-submenu__title {\r\n  text-align: left;\r\n}\r\n</style>\r\n"],"mappings":"AAgDA,SAAAA,WAAA;AACA,SAAAC,SAAA;AACA,SAAAC,gBAAA;AACA,SAAAC,QAAA;AACA;EACAC,IAAA;EACAC,QAAA;EACAC,KAAA;IACA;MACAC,KAAA,GAAAP,WAAA,EAAAC,SAAA,EAAAC,gBAAA,EAAAC,QAAA;IACA;EACA;EACAK,QAAA;IACAC,OAAA;MACA,IAAAC,IAAA,cAAAC,MAAA,CAAAC,IAAA,CAAAC,KAAA;MACA,IAAAC,IAAA,QAAAP,KAAA,CAAAQ,MAAA,CAAAC,IAAA;QACA,OAAAA,IAAA,CAAAJ,IAAA,IAAAF,IAAA;MACA;MACA;MACA,OAAAI,IAAA,CAAAG,MAAA,GAAAH,IAAA,IAAAI,QAAA;IACA;EACA;EACAC,OAAA;IACAC,iBAAA;MACA;MACA,YAAAX,MAAA,CAAAM,MAAA,CAAAC,IAAA;QACA,OAAAA,IAAA,CAAAE,QAAA;MACA;IACA;IACAG,eAAA;MACA;MACA,YAAAZ,MAAA,CAAAM,MAAA,CAAAC,IAAA;QACA,QAAAA,IAAA,CAAAE,QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}