{"ast":null,"code":"import breadCrumb from \"components/breadCrumb\";\nexport default {\n  components: {\n    breadCrumb\n  },\n  data() {\n    return {\n      filters: {\n        sex: undefined,\n        license: undefined,\n        remove: undefined,\n        bread: undefined,\n        coat_color: undefined\n      },\n      tableData: [],\n      tableHeader: [{\n        prop: \"id\",\n        label: \"编号\",\n        width: \"150\"\n      }, {\n        prop: \"name\",\n        label: \"宠物名\",\n        width: \"100 \"\n      }, {\n        prop: \"pet_type\",\n        label: \"宠物类型\",\n        width: \"80\"\n      }, {\n        prop: \"sex\",\n        label: \"雌雄\",\n        width: 40\n      }, {\n        prop: \"breed\",\n        label: \"品种\",\n        width: 80\n      }, {\n        prop: \"coat_color\",\n        label: \"毛色\",\n        width: 60\n      }, {\n        prop: \"pet_license\",\n        label: \"宠物登记\",\n        width: 100\n      }, {\n        label: \"操作\"\n      }],\n      pagenum: 1,\n      //第几页\n      pagesize: 10 //这一页有多少条数据这个数据并不会改变表格里面的渲染数据的条数，在表格中他是根据tableData来显示的，tableData有几条数据就显示几条。pagesize作为每页显示的数目，pagenum作为当前页，在向后端请求数据的时候，会发送过去，后端将会根据这两个参数返回相对应的table数据，然后前端拿到这个table数据之后，根据这个数据进行渲染\n    };\n  },\n\n  methods: {\n    handleSizeChange(val) {\n      this.pagesize = val;\n    },\n    //获取数据\n    gePetData() {\n      this.$request({\n        url: \"/pet/list\",\n        method: \"post\",\n        data: {\n          page_num: this.pagenum,\n          page_size: this.pagesize,\n          community_id: this.postinfo.community_list[0].community_id,\n          ...this.filters\n        }\n      }).then(res => {\n        this.tableData = res.data.data.list;\n      });\n    }\n  },\n  mounted() {\n    this.gePetData();\n  },\n  computed: {\n    postinfo() {\n      if (this.$store.getters.getPostInfo.community_list.length) {\n        return this.$store.getters.getPostInfo;\n      } else {\n        return '1';\n      }\n    }\n  }\n};","map":{"version":3,"names":["breadCrumb","components","data","filters","sex","undefined","license","remove","bread","coat_color","tableData","tableHeader","prop","label","width","pagenum","pagesize","methods","handleSizeChange","val","gePetData","$request","url","method","page_num","page_size","community_id","postinfo","community_list","then","res","list","mounted","computed","$store","getters","getPostInfo","length"],"sources":["src/views/basic/pet/list.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <bread-crumb></bread-crumb>\r\n    <!--筛选列表 -->\r\n    <el-card style=\"margin-top: 20px\">\r\n      <div class=\"item\">\r\n        <span>雌雄：</span>\r\n        <el-radio-group v-model=\"filters.sex\">\r\n          <el-radio-button :label=\"undefined\">全部</el-radio-button>\r\n          <el-radio-button :label=\"1\">雄</el-radio-button>\r\n          <el-radio-button :label=\"0\">雌</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <div class=\"item\">\r\n        <span>登记：</span>\r\n        <el-radio-group v-model=\"filters.license\">\r\n          <el-radio-button :label=\"undefined\">全部</el-radio-button>\r\n          <el-radio-button :label=\"true\">已登记</el-radio-button>\r\n          <el-radio-button :label=\"false\">未登记</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <div class=\"item\">\r\n        <span>注销：</span>\r\n        <el-radio-group v-model=\"filters.remove\">\r\n          <el-radio-button :label=\"undefined\">全部</el-radio-button>\r\n          <el-radio-button :label=\"1\">是</el-radio-button>\r\n          <el-radio-button :label=\"0\">否</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      <div class=\"item\">\r\n        <span>品种：</span>\r\n        <el-input\r\n          placeholder=\"请输入品种搜索\"\r\n          v-model=\"filters.bread\"\r\n          style=\"width: 280px\"\r\n        >\r\n          <el-button slot=\"append\">检索</el-button>\r\n        </el-input>\r\n      </div>\r\n      <div class=\"item\">\r\n        <span>毛色：</span>\r\n        <el-input\r\n          placeholder=\"请输入毛色搜索\"\r\n          v-model=\"filters.coat_color\"\r\n          style=\"width: 280px\"\r\n        >\r\n          <el-button slot=\"append\">检索</el-button>\r\n        </el-input>\r\n      </div>\r\n    </el-card>\r\n    <!-- 表格 -->\r\n    <el-card style=\"margin-top: 20px; padding: 0px\">\r\n      <el-table :data=\"tableData\" max-height=\"650\">\r\n        <el-table-column\r\n          v-for=\"item of tableHeader\"\r\n          :key=\"item.prop\"\r\n          :prop=\"item.prop\"\r\n          :label=\"item.label\"\r\n          :minwidth=\"item.width\"\r\n        >\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分页器 -->\r\n      <div class=\"pignation\">\r\n        <el-pagination\r\n          :pagesizes=\"[100, 200, 300, 400]\"\r\n          :page-size=\"pagesize\"\r\n          :total=\"tableData.length\"\r\n          :current-page=\"pagenum\"\r\n          @size-change=\"handleSizeChange\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n        ></el-pagination>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport breadCrumb from \"components/breadCrumb\";\r\nexport default {\r\n  components: { breadCrumb },\r\n  data() {\r\n    return {\r\n      filters: {\r\n        sex: undefined,\r\n        license: undefined,\r\n        remove: undefined,\r\n        bread: undefined,\r\n        coat_color: undefined,\r\n      },\r\n      tableData: [],\r\n      tableHeader: [\r\n        { prop: \"id\", label: \"编号\", width: \"150\" },\r\n        { prop: \"name\", label: \"宠物名\", width: \"100 \" },\r\n        { prop: \"pet_type\", label: \"宠物类型\", width: \"80\" },\r\n        { prop: \"sex\", label: \"雌雄\", width: 40 },\r\n        { prop: \"breed\", label: \"品种\", width: 80 },\r\n        { prop: \"coat_color\", label: \"毛色\", width: 60 },\r\n        { prop: \"pet_license\", label: \"宠物登记\", width: 100 },\r\n        { label: \"操作\" },\r\n      ],\r\n      pagenum: 1, //第几页\r\n      pagesize: 10, //这一页有多少条数据这个数据并不会改变表格里面的渲染数据的条数，在表格中他是根据tableData来显示的，tableData有几条数据就显示几条。pagesize作为每页显示的数目，pagenum作为当前页，在向后端请求数据的时候，会发送过去，后端将会根据这两个参数返回相对应的table数据，然后前端拿到这个table数据之后，根据这个数据进行渲染\r\n    };\r\n  },\r\n  methods: {\r\n    handleSizeChange(val) {\r\n      this.pagesize = val;\r\n    },\r\n\t//获取数据\r\n    gePetData() {\r\n\r\n      this.$request({\r\n        url: \"/pet/list\",\r\n        method: \"post\",\r\n        data: {\r\n          page_num: this.pagenum,\r\n          page_size: this.pagesize,\r\n          community_id:\r\n            this.postinfo.community_list[0].community_id,\r\n\t\t\t...this.filters,\r\n        },\r\n      }).then((res) => {\r\n        this.tableData = res.data.data.list;\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.gePetData();\r\n  },\r\n  computed:{\r\n\tpostinfo(){\r\n\t\tif(this.$store.getters.getPostInfo.community_list.length){\r\n\t\t\treturn this.$store.getters.getPostInfo\r\n\t\t}else{\r\n\t\t\treturn '1'\r\n\t\t}\r\n\t\t\r\n\t}\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.item {\r\n  height: 50px;\r\n  padding: 0px;\r\n  line-height: 40px;\r\n  height: 40px;\r\n  padding-left: 20px;\r\n  margin-bottom: 20px;\r\n  text-align: left;\r\n}\r\n.item span {\r\n  margin-right: 20px;\r\n}\r\n.pignation {\r\n  height: 30px;\r\n  margin-top: 30px;\r\n  text-align: right;\r\n}\r\n</style>\r\n"],"mappings":"AA8EA,OAAAA,UAAA;AACA;EACAC,UAAA;IAAAD;EAAA;EACAE,KAAA;IACA;MACAC,OAAA;QACAC,GAAA,EAAAC,SAAA;QACAC,OAAA,EAAAD,SAAA;QACAE,MAAA,EAAAF,SAAA;QACAG,KAAA,EAAAH,SAAA;QACAI,UAAA,EAAAJ;MACA;MACAK,SAAA;MACAC,WAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;MAAA,EACA;MACAE,OAAA;MAAA;MACAC,QAAA;IACA;EACA;;EACAC,OAAA;IACAC,iBAAAC,GAAA;MACA,KAAAH,QAAA,GAAAG,GAAA;IACA;IACA;IACAC,UAAA;MAEA,KAAAC,QAAA;QACAC,GAAA;QACAC,MAAA;QACArB,IAAA;UACAsB,QAAA,OAAAT,OAAA;UACAU,SAAA,OAAAT,QAAA;UACAU,YAAA,EACA,KAAAC,QAAA,CAAAC,cAAA,IAAAF,YAAA;UACA,QAAAvB;QACA;MACA,GAAA0B,IAAA,CAAAC,GAAA;QACA,KAAApB,SAAA,GAAAoB,GAAA,CAAA5B,IAAA,CAAAA,IAAA,CAAA6B,IAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAZ,SAAA;EACA;EACAa,QAAA;IACAN,SAAA;MACA,SAAAO,MAAA,CAAAC,OAAA,CAAAC,WAAA,CAAAR,cAAA,CAAAS,MAAA;QACA,YAAAH,MAAA,CAAAC,OAAA,CAAAC,WAAA;MACA;QACA;MACA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}