{"ast":null,"code":"import tableComon from \"components/tableComon.vue\";\nimport breadCrumb from \"@/components/breadCrumb.vue\";\nimport { mixins } from \"@/minxin\";\nexport default {\n  name: \"totalMeeting\",\n  components: {\n    breadCrumb,\n    tableComon\n  },\n  mixins: [mixins],\n  data() {\n    return {\n      chose: \"my\",\n      myListHead: [{\n        prop: \"meetID\",\n        label: \"会议编号\",\n        render(h, {\n          row\n        }) {\n          return h(\"span\", row.id);\n        }\n      }, {\n        prop: \"meetTime\",\n        label: \"会议时间\",\n        render(h, {\n          row\n        }) {\n          return h(\"span\", `${this.standDate(row.created_at, \"YYYY-MM-DD HH:mm:ss\")}-${this.standDate(row.end_time, \"YYYY-MM-DD HH:mm:ss\")}`);\n        }\n      }, {\n        prop: \"theme\",\n        label: \"会议主题\"\n      }, {\n        prop: \"name\",\n        label: \"会议名称\",\n        key: \"name\"\n      }, {\n        prop: \"local\",\n        label: \"会议位置\",\n        key: \"local\"\n      }, {\n        prop: \"status\",\n        label: \"会议状态\",\n        key: \"cancel\",\n        render(h, {\n          row\n        }) {\n          let res, type;\n          if (row.cancel == 0) {\n            res = \"已结束\";\n            type = 'info';\n          } else {\n            res = \"待开始\";\n            type = 'success';\n          }\n          return h(\"el-tag\", {\n            attrs: {\n              type: type\n            }\n          }, res);\n        }\n      }, {\n        prop: \"created_by\",\n        label: \"预定时间\",\n        render(h, {\n          row\n        }) {\n          return h(\"span\", `${this.standDate(row.created_by, \"YYYY-MM-DD HH:mm:ss\")}`);\n        }\n      }, {\n        prop: \"action\",\n        label: \"操作\",\n        render(h, {\n          row\n        }) {\n          return h(\"span\", {\n            class: {\n              'doaction': true\n            },\n            style: {\n              color: 'sckyblue'\n            }\n          }, \"查看\");\n        }\n      }],\n      ListData: []\n    };\n  },\n  mounted() {\n    console.log(this.community_id);\n    this.getMyData();\n  },\n  methods: {\n    getMyData() {\n      let data = {\n        community_id: this.community_id,\n        page_num: 1,\n        page_size: 20\n      };\n      this.$request({\n        url: \"/meeting/detail/my\",\n        method: \"post\",\n        data: data\n      }).then(res => {\n        console.log(res);\n        this.ListData = res.data.data.list;\n      });\n    }\n  }\n};","map":{"version":3,"names":["tableComon","breadCrumb","mixins","name","components","data","chose","myListHead","prop","label","render","h","row","id","standDate","created_at","end_time","key","res","type","cancel","attrs","created_by","class","style","color","ListData","mounted","console","log","community_id","getMyData","methods","page_num","page_size","$request","url","method","then","list"],"sources":["src/views/oa/meeting/list.vue"],"sourcesContent":["<template>\r\n  <div id=\"totalMeet\">\r\n    <bread-crumb></bread-crumb>\r\n    <div class=\"tagCh\">\r\n      <el-tag class=\"tagitem\">我发起的会议</el-tag>\r\n      <el-tag class=\"tagitem\">需要我参加的会议</el-tag>\r\n    </div>\r\n\r\n    <el-card style=\"margin-top: 10px\">\r\n      <table-comon :columns=\"myListHead\" :data=\"ListData\"></table-comon>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport tableComon from \"components/tableComon.vue\";\r\nimport breadCrumb from \"@/components/breadCrumb.vue\";\r\nimport { mixins } from \"@/minxin\";\r\nexport default {\r\n  name: \"totalMeeting\",\r\n  components: { breadCrumb, tableComon },\r\n  mixins: [mixins],\r\n  data() {\r\n    return {\r\n      chose: \"my\",\r\n      myListHead: [\r\n        {\r\n          prop: \"meetID\",\r\n          label: \"会议编号\",\r\n          render(h, { row }) {\r\n            return h(\"span\", row.id);\r\n          },\r\n        },\r\n        {\r\n          prop: \"meetTime\",\r\n          label: \"会议时间\",\r\n          render(h, { row }) {\r\n            return h(\r\n              \"span\",\r\n              `${this.standDate(\r\n                row.created_at,\r\n                \"YYYY-MM-DD HH:mm:ss\"\r\n              )}-${this.standDate(row.end_time, \"YYYY-MM-DD HH:mm:ss\")}`\r\n            );\r\n          },\r\n        },\r\n        { prop: \"theme\", label: \"会议主题\" },\r\n        { prop: \"name\", label: \"会议名称\", key: \"name\" },\r\n        { prop: \"local\", label: \"会议位置\", key: \"local\" },\r\n        {\r\n          prop: \"status\",\r\n          label: \"会议状态\",\r\n          key: \"cancel\",\r\n          render(h, { row }) {\r\n\t\t\tlet res,type\r\n              if (row.cancel == 0) {\r\n                res = \"已结束\";\r\n\t\t\t\ttype='info'\r\n              } else {\r\n                res = \"待开始\";\r\n\t\t\t\ttype='success'\r\n              }\r\n            return h(\"el-tag\", {attrs:{type:type}},res);\r\n          },\r\n        },\r\n        {\r\n          prop: \"created_by\",\r\n          label: \"预定时间\",\r\n          render(h, { row }) {\r\n            return h(\r\n              \"span\",\r\n              `${this.standDate(row.created_by, \"YYYY-MM-DD HH:mm:ss\")}`\r\n            );\r\n          },\r\n        },\r\n        {\r\n          prop: \"action\",\r\n          label: \"操作\",\r\n          render(h, { row }) {\r\n            return h(\"span\",{class:{'doaction':true},style:{\r\n\t\t\t\tcolor:'sckyblue'\r\n\t\t\t}}, \"查看\");\r\n          },\r\n        },\r\n      ],\r\n      ListData: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    console.log(this.community_id);\r\n    this.getMyData();\r\n  },\r\n  methods: {\r\n    getMyData() {\r\n      let data = {\r\n        community_id: this.community_id,\r\n        page_num: 1,\r\n        page_size: 20,\r\n      };\r\n      this.$request({\r\n        url: \"/meeting/detail/my\",\r\n        method: \"post\",\r\n        data: data,\r\n      }).then((res) => {\r\n        console.log(res);\r\n        this.ListData = res.data.data.list;\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\">\r\n#totalMeet {\r\n  .tagCh {\r\n    background-color: #fff;\r\n    width: 100%;\r\n    height: 50px;\r\n    text-align: left;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    .tagitem {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAeA,OAAAA,UAAA;AACA,OAAAC,UAAA;AACA,SAAAC,MAAA;AACA;EACAC,IAAA;EACAC,UAAA;IAAAH,UAAA;IAAAD;EAAA;EACAE,MAAA,GAAAA,MAAA;EACAG,KAAA;IACA;MACAC,KAAA;MACAC,UAAA,GACA;QACAC,IAAA;QACAC,KAAA;QACAC,OAAAC,CAAA;UAAAC;QAAA;UACA,OAAAD,CAAA,SAAAC,GAAA,CAAAC,EAAA;QACA;MACA,GACA;QACAL,IAAA;QACAC,KAAA;QACAC,OAAAC,CAAA;UAAAC;QAAA;UACA,OAAAD,CAAA,CACA,QACA,QAAAG,SAAA,CACAF,GAAA,CAAAG,UAAA,EACA,sBACA,SAAAD,SAAA,CAAAF,GAAA,CAAAI,QAAA,2BACA;QACA;MACA,GACA;QAAAR,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;QAAAQ,GAAA;MAAA,GACA;QAAAT,IAAA;QAAAC,KAAA;QAAAQ,GAAA;MAAA,GACA;QACAT,IAAA;QACAC,KAAA;QACAQ,GAAA;QACAP,OAAAC,CAAA;UAAAC;QAAA;UACA,IAAAM,GAAA,EAAAC,IAAA;UACA,IAAAP,GAAA,CAAAQ,MAAA;YACAF,GAAA;YACAC,IAAA;UACA;YACAD,GAAA;YACAC,IAAA;UACA;UACA,OAAAR,CAAA;YAAAU,KAAA;cAAAF,IAAA,EAAAA;YAAA;UAAA,GAAAD,GAAA;QACA;MACA,GACA;QACAV,IAAA;QACAC,KAAA;QACAC,OAAAC,CAAA;UAAAC;QAAA;UACA,OAAAD,CAAA,CACA,QACA,QAAAG,SAAA,CAAAF,GAAA,CAAAU,UAAA,2BACA;QACA;MACA,GACA;QACAd,IAAA;QACAC,KAAA;QACAC,OAAAC,CAAA;UAAAC;QAAA;UACA,OAAAD,CAAA;YAAAY,KAAA;cAAA;YAAA;YAAAC,KAAA;cACAC,KAAA;YACA;UAAA;QACA;MACA,EACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA,MAAAC,YAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,IAAA1B,IAAA;QACAyB,YAAA,OAAAA,YAAA;QACAG,QAAA;QACAC,SAAA;MACA;MACA,KAAAC,QAAA;QACAC,GAAA;QACAC,MAAA;QACAhC,IAAA,EAAAA;MACA,GAAAiC,IAAA,CAAApB,GAAA;QACAU,OAAA,CAAAC,GAAA,CAAAX,GAAA;QACA,KAAAQ,QAAA,GAAAR,GAAA,CAAAb,IAAA,CAAAA,IAAA,CAAAkC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}