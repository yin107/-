{"ast":null,"code":"export default {\n  name: \"breadCrumb\",\n  mounted() {\n    console.log(this.$route.matched);\n  },\n  computed: {\n    Name1() {\n      let res = \"/\" + this.$route.path.split(\"/\")[1];\n      let routestotal = this.$router.options.routes;\n      let array = routestotal.filter(item => {\n        return item.path == res;\n      });\n      return array;\n    },\n    Name2() {\n      let res = \"/\" + this.$route.path.split(\"/\")[1] + \"/\" + this.$route.path.split(\"/\")[2];\n      let routestotal = this.Name1[0].children;\n      let array = routestotal.filter(item => {\n        return item.path == res;\n      });\n      return array;\n    },\n    Name3() {\n      let res = this.$route.path;\n      let arr = this.Name2[0].children.filter(item => {\n        return item.path == res;\n      });\n      return arr;\n    }\n  }\n};","map":{"version":3,"names":["name","mounted","console","log","$route","matched","computed","Name1","res","path","split","routestotal","$router","options","routes","array","filter","item","Name2","children","Name3","arr"],"sources":["src/components/breadCrumb.vue"],"sourcesContent":["<template>\r\n  <el-breadcrumb separator=\"/\">\r\n    <el-breadcrumb-item>{{ Name1[0].meta.title }}</el-breadcrumb-item>\r\n    <el-breadcrumb-item>{{ Name2[0].meta.title }}</el-breadcrumb-item>\r\n\t<el-breadcrumb-item>{{ Name3[0].meta.title }}</el-breadcrumb-item>\r\n\r\n  </el-breadcrumb>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"breadCrumb\",\r\n  mounted() {\r\n    console.log(this.$route.matched);\r\n  },\r\n  computed: {\r\n    Name1() {\r\n      let res = \"/\" + this.$route.path.split(\"/\")[1];\r\n      let routestotal = this.$router.options.routes;\r\n      let array = routestotal.filter((item) => {\r\n        return item.path == res;\r\n      });\r\n      return array;\r\n    },\r\n    Name2() {\r\n      let res =\r\n        \"/\" +\r\n        this.$route.path.split(\"/\")[1] +\r\n        \"/\" +\r\n        this.$route.path.split(\"/\")[2];\r\n      let routestotal = this.Name1[0].children;\r\n      let array = routestotal.filter((item) => {\r\n        return item.path == res;\r\n      });\r\n      return array;\r\n    },\r\n    Name3() {\r\n\t\tlet res=this.$route.path\r\n\t\tlet arr=this.Name2[0].children.filter(item=>{\r\n\t\t\treturn item.path==res\r\n\t\t})\r\n\t\treturn arr\r\n\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAUA;EACAA,IAAA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA,MAAAC,MAAA,CAAAC,OAAA;EACA;EACAC,QAAA;IACAC,MAAA;MACA,IAAAC,GAAA,cAAAJ,MAAA,CAAAK,IAAA,CAAAC,KAAA;MACA,IAAAC,WAAA,QAAAC,OAAA,CAAAC,OAAA,CAAAC,MAAA;MACA,IAAAC,KAAA,GAAAJ,WAAA,CAAAK,MAAA,CAAAC,IAAA;QACA,OAAAA,IAAA,CAAAR,IAAA,IAAAD,GAAA;MACA;MACA,OAAAO,KAAA;IACA;IACAG,MAAA;MACA,IAAAV,GAAA,GACA,MACA,KAAAJ,MAAA,CAAAK,IAAA,CAAAC,KAAA,WACA,MACA,KAAAN,MAAA,CAAAK,IAAA,CAAAC,KAAA;MACA,IAAAC,WAAA,QAAAJ,KAAA,IAAAY,QAAA;MACA,IAAAJ,KAAA,GAAAJ,WAAA,CAAAK,MAAA,CAAAC,IAAA;QACA,OAAAA,IAAA,CAAAR,IAAA,IAAAD,GAAA;MACA;MACA,OAAAO,KAAA;IACA;IACAK,MAAA;MACA,IAAAZ,GAAA,QAAAJ,MAAA,CAAAK,IAAA;MACA,IAAAY,GAAA,QAAAH,KAAA,IAAAC,QAAA,CAAAH,MAAA,CAAAC,IAAA;QACA,OAAAA,IAAA,CAAAR,IAAA,IAAAD,GAAA;MACA;MACA,OAAAa,GAAA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}